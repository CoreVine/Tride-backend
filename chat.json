{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-f1e2-d3c4b5a6f7e8",
    "name": "SchoolBus - Notification API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Postman collection for testing Notification endpoints with Socket.IO integration"
  },
  "item": [
    {
      "name": "Authentication Setup",
      "item": [
        {
          "name": "Set Auth Token",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', 'YOUR_JWT_TOKEN_HERE');",
                  "pm.collectionVariables.set('user_id', '123');",
                  "pm.collectionVariables.set('account_type', 'parent');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "",
              "host": [""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "HTTP Notification Endpoints",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications?limit=10&offset=0&is_read=false",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                },
                {
                  "key": "is_read",
                  "value": "false"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/unread-count",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "unread-count"]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/611a9d4f8fce2c2a1c6e7d5a/read",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "notifications",
                "611a9d4f8fce2c2a1c6e7d5a",
                "read"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark All Notifications as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/mark-all-read",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "mark-all-read"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Notification",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/notifications/611a9d4f8fce2c2a1c6e7d5a",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "611a9d4f8fce2c2a1c6e7d5a"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "WebSocket Notification Tests",
      "item": [
        {
          "name": "Connect to Socket.IO",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "ws://localhost:3000/socket.io/?token={{auth_token}}&EIO=4&transport=websocket",
              "protocol": "ws",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "token",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Listen for Notification Events",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// First establish the WebSocket connection",
                  "pm.sendRequest({",
                  "  url: 'ws://localhost:3000/socket.io/?token=' + pm.collectionVariables.get('auth_token') + '&EIO=4&transport=websocket',",
                  "  method: 'GET',",
                  "  header: {",
                  "    'Authorization': 'Bearer ' + pm.collectionVariables.get('auth_token')",
                  "  }",
                  "}, function(err, res) {",
                  "  if (err) {",
                  "    console.error(err);",
                  "    return;",
                  "  }",
                  "  // Store the WebSocket connection",
                  "  pm.collectionVariables.set('ws_connection', res);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "ws://localhost:3000/socket.io/?token={{auth_token}}&EIO=4&transport=websocket",
              "protocol": "ws",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "token",
                  "value": "{{auth_token}}"
                },
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Simulate New Notification (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"recipientId\": \"{{user_id}}\",\n    \"type\": \"system_notification\",\n    \"title\": \"Test Notification\",\n    \"message\": \"This is a test notification sent from Postman\",\n    \"metadata\": {\n        \"test\": true,\n        \"sender\": \"Postman\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/notifications/simulate",
              "host": ["{{base_url}}"],
              "path": ["api", "notifications", "simulate"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "description": "Base URL for HTTP requests"
    },
    {
      "key": "ws_url",
      "value": "ws://localhost:3000",
      "description": "WebSocket URL"
    },
    {
      "key": "auth_token",
      "value": "",
      "description": "JWT token from login"
    },
    {
      "key": "user_id",
      "value": "",
      "description": "Current user ID"
    },
    {
      "key": "account_type",
      "value": "",
      "description": "Current user account type (parent/driver)"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ]
}
